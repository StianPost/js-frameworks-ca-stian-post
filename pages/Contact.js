import * as Yup from 'yup';

import { Field, Form, Formik } from 'formik';

import Head from 'next/head';
import Nav from '../components/Nav';
import React from 'react';
import styles from '../styles/Home.module.css';

function Contact() {
  const SignupSchema = Yup.object().shape({
    firstName: Yup.string()
      .min(3, 'Too Short!')
      .max(50, 'Too Long!')
      .required('Required'),
    lastName: Yup.string()
      .min(4, 'Too Short!')
      .max(50, 'Too Long!')
      .required('Required'),
    email: Yup.string().email('Invalid email').required('Required'),
    subject: Yup.string().required('Required'),
    message: Yup.string()
      .min(10, 'must be 10 chars or longer')
      .max(150, 'This is too long'),
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>People</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <div>
          <Nav />
        </div>
        <h1 className='text-4xl'>Contact</h1>
        <Formik
          initialValues={{
            firstName: '',
            lastName: '',
            email: '',
            message: 'Write..',
          }}
          validationSchema={SignupSchema}
          onSubmit={(values) => {
            // same shape as initial values
            console.log(values);
          }}
        >
          {({ errors, touched }) => (
            <Form className=''>
              <p className='mb-0'>Name:</p>
              <Field
                className='block border border-solid border-black bg-slate-300 rounded-sm p-1 w-64'
                name='firstName'
              />
              {errors.firstName && touched.firstName ? (
                <div>{errors.firstName}</div>
              ) : null}
              <p className='mb-0'>Last Name:</p>
              <Field
                className='block border border-solid border-black bg-slate-300 rounded-sm p-1 w-64'
                name='lastName'
              />
              {errors.lastName && touched.lastName ? (
                <div>{errors.lastName}</div>
              ) : null}
              <p className='mb-0'>Email:</p>
              <Field
                className='block border border-solid border-black bg-slate-300 rounded-sm p-1 w-64'
                name='email'
                type='email'
              />
              {errors.email && touched.email ? <div>{errors.email}</div> : null}
              <p className='mb-0'>Subject:</p>
              <Field
                className='block border border-solid border-black bg-slate-300 rounded-sm p-1 w-64'
                name='subject'
                as='select'
              >
                <option value=''></option>
                <option value='knut'>Knut</option>
                <option value='geir'>Geir</option>
                <option value='olav'>Olav</option>
                <option value='borge'>BÃ¸rge</option>
              </Field>
              {errors.subject || touched.subject ? (
                <div>{errors.subject}</div>
              ) : null}
              <p className='mb-0'>Message:</p>
              <Field
                className='block border border-solid border-black bg-slate-300 rounded-sm p-1 w-64'
                name='message'
                as='textarea'
              ></Field>
              {errors.message && touched.message ? (
                <div>{errors.message}</div>
              ) : null}

              <button
                className='block border border-solid border-black bg-green-600 p-2 rounded-sm'
                type='submit'
              >
                Submit
              </button>
            </Form>
          )}
        </Formik>
      </main>
    </div>
  );
}

export default Contact;
